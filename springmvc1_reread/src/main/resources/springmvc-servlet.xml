<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


        <context:component-scan base-package="com.lagou" />



    <!-- 静态资源配置方案一 -->
        <!--
        原理：添加该标签后，会在Springmvc上下文中定义一个 DefaultServletHttpRequestHandle 对象
            这个对象如同一个检查人员，对进入DispatcherServlet 的 url 请求进行过滤，如果发现是一个静态资源请求
            那么会把请求转有web应用 服务器（tomcat） 默认的DefaultServlet 来处理，如果不是静态资源请求，那么
            继续由Springmvc 框架处理
        -->
<!--        <mvc:default-servlet-handler />-->


    <!-- 静态资源配置方案二 -->

        <!--
        SpringMvc的框架自己处理静态资源
        mapping:约定的静态资源的url规则
        location:指定的静态资源的存放位置
        -->
        <mvc:resources location="classpath:/"  mapping="/resources/**"/>
        <mvc:resources location="/WEB-INF/js/" mapping="/js/**"/>

        <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
            <property name="prefix" value="/WEB-INF/jsp/" />
            <property name="suffix" value=".jsp" />
        </bean>


    <!-- 这里需要添加 -->
    <mvc:annotation-driven conversion-service="conversionServiceBean" />
    <!-- 注册自定义的转换器 -->
    <bean id="conversionServiceBean"
          class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.lagou.converter.DateConverter">
                </bean>
            </set>
        </property>
    </bean>


    <!-- 过滤器集 的 设置 -->
    <mvc:interceptors>

        <!--  单个过滤器的设置 -->
        <mvc:interceptor>

            <!--  配置当前拦截器的url的拦截规则  ，**  代表 当前目录下及其 子目录下的所有url -->
            <mvc:mapping path="/**"/>
            <!--  exclude-mapping  在 mapping 的基础上 排除掉医学url 拦截 -->
<!--            <mvc:exclude-mapping path="/demo/**"/>-->

            <bean class="com.lagou.interceptor.MyInterceptor1"/>

        </mvc:interceptor>

        <!--  单个过滤器的设置 -->
        <mvc:interceptor>

            <!--  配置当前拦截器的url的拦截规则  ，**  代表 当前目录下及其 子目录下的所有url -->
            <mvc:mapping path="/**"/>
            <!--  exclude-mapping  在 mapping 的基础上 排除掉医学url 拦截 -->
            <!--            <mvc:exclude-mapping path="/demo/**"/>-->

            <bean class="com.lagou.interceptor.MyInterceptor2"/>

        </mvc:interceptor>

    </mvc:interceptors>

    <!--
    多元素 解析器
    id 固定为 multipartResolver
    -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="500000"/>
    </bean>

</beans>
